# Generated by Django 3.1.5 on 2021-01-27 20:58

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlockInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('epoch', models.IntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('block_count', models.IntegerField()),
                ('basefee', models.BigIntegerField()),
            ],
            options={
                'verbose_name': 'blockinfo',
                'verbose_name_plural': 'blockinfos',
                'db_table': 'blockinfo',
                'ordering': ['epoch'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ForecastDataModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('epoch', models.IntegerField(unique=True)),
                ('empty_num', models.IntegerField()),
                ('block_count', models.IntegerField()),
                ('parent_basefee', models.BigIntegerField()),
                ('count_block', models.IntegerField()),
                ('limit_total_block', models.BigIntegerField()),
                ('limit_avg_block', models.BigIntegerField()),
                ('cap_total_block', models.BigIntegerField()),
                ('cap_avg_block', models.BigIntegerField()),
                ('premium_total_block', models.BigIntegerField()),
                ('premium_avg_block', models.BigIntegerField()),
                ('backward', models.IntegerField()),
            ],
            options={
                'verbose_name': 'ForecastDataModel',
                'verbose_name_plural': 'ForecastDataModels',
                'db_table': 'forecast_data',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ForecastResultModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('epoch', models.IntegerField(unique=True)),
                ('parent_basefee', models.BigIntegerField()),
                ('delta', models.BigIntegerField(default=0)),
                ('isPostive', models.BooleanField(default=True)),
                ('delta_proba', models.FloatField(default=0)),
            ],
            options={
                'verbose_name': 'ForecastResultModel',
                'verbose_name_plural': 'ForecastResultModels',
                'db_table': 'forecast_result',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ForecastTiggerModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('epoch', models.IntegerField(unique=True)),
                ('isOk', models.BooleanField()),
            ],
            options={
                'verbose_name': 'ForecastTiggerModel',
                'verbose_name_plural': 'ForecastTiggerModels',
                'db_table': 'ForecastTigger',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MpoolInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('epoch', models.IntegerField()),
            ],
            options={
                'verbose_name': 'mpoolinfo',
                'verbose_name_plural': 'mpoolinfos',
                'db_table': 'mpoolinfo',
                'ordering': ['epoch'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TrainingBlockModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('epoch', models.IntegerField(unique=True)),
                ('empty_num', models.IntegerField()),
                ('block_count', models.IntegerField()),
                ('parent_basefee', models.BigIntegerField()),
                ('count_block', models.IntegerField()),
                ('limit_total_block', models.BigIntegerField()),
                ('limit_avg_block', models.BigIntegerField()),
                ('cap_total_block', models.BigIntegerField()),
                ('cap_avg_block', models.BigIntegerField()),
                ('premium_total_block', models.BigIntegerField()),
                ('premium_avg_block', models.BigIntegerField()),
                ('backward', models.IntegerField()),
            ],
            options={
                'verbose_name': 'TrainDataModel',
                'verbose_name_plural': 'TrainDataModels',
                'db_table': 'trainingBlock',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TrainingResultModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('epoch', models.IntegerField(unique=True)),
                ('parent_basefee', models.BigIntegerField()),
                ('delta', models.BigIntegerField(default=0)),
                ('isPostive', models.BooleanField(default=True)),
                ('delta_proba', models.FloatField(default=0)),
            ],
            options={
                'verbose_name': 'TrainResultModel',
                'verbose_name_plural': 'TrainResultModels',
                'db_table': 'trainResult',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TrainTiggerModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('epoch', models.IntegerField(unique=True)),
                ('isOk', models.BooleanField()),
            ],
            options={
                'verbose_name': 'TrainTiggerModel',
                'verbose_name_plural': 'TrainTiggerModels',
                'db_table': 'TrainTigger',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MpoolCateInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('epoch', models.IntegerField()),
                ('cate_code', models.IntegerField()),
                ('count', models.IntegerField()),
                ('gas_limit_avg', models.BigIntegerField(blank=True, null=True)),
                ('gas_limit_total', models.BigIntegerField(blank=True, null=True)),
                ('gas_cap_avg', models.BigIntegerField(blank=True, null=True)),
                ('gas_cap_total', models.BigIntegerField(blank=True, null=True)),
                ('gas_premium_avg', models.BigIntegerField(blank=True, null=True)),
                ('gas_premium_total', models.BigIntegerField(blank=True, null=True)),
                ('value', models.BigIntegerField(blank=True, null=True)),
                ('foreign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cates', to='gas_learn.mpoolinfo')),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='BlockCateInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('epoch', models.IntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('cate_code', models.IntegerField()),
                ('count', models.IntegerField()),
                ('gas_limit_avg', models.BigIntegerField(blank=True, null=True)),
                ('gas_limit_total', models.BigIntegerField(blank=True, null=True)),
                ('gas_cap_avg', models.BigIntegerField(blank=True, null=True)),
                ('gas_cap_total', models.BigIntegerField(blank=True, null=True)),
                ('gas_premium_avg', models.BigIntegerField(blank=True, null=True)),
                ('gas_premium_total', models.BigIntegerField(blank=True, null=True)),
                ('value', models.BigIntegerField(blank=True, null=True)),
                ('foreign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cates', to='gas_learn.blockinfo')),
            ],
            options={
                'ordering': ['created'],
            },
        ),
    ]
